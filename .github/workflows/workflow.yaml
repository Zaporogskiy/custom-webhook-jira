name: Notify Jira on Release Events

on:
  release:
    types: [created, edited, published, unpublished, deleted]
  workflow_dispatch:
    inputs:
      custom_payload:
        description: 'Custom JSON payload (optional)'
        required: false
        default: '{}'

jobs:
  notify-jira:
    runs-on: ubuntu-latest

    # –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ–∫—Ä–µ—Ç—ã –≤ env
    env:
      JIRA_WEBHOOK_URL: ${{ secrets.JIRA_WEBHOOK_URL }}
      JIRA_WEBHOOK_TOKEN: ${{ secrets.JIRA_WEBHOOK_TOKEN }}

    # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ ‚Äî –≤—Å–µ–≥–¥–∞; release-—Å–æ–±—ã—Ç–∏—è ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è draft
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'release' &&
       github.event.release &&
       github.event.release.draft == true)

    steps:
      - name: Build payload file
        id: payload
        run: |
          set -euo pipefail
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "üîß Manual trigger with custom payload"
            # –ë–µ—Ä—ë–º JSON –∏–∑ –≤–≤–æ–¥–∞ —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
            printf '%s' '${{ inputs.custom_payload }}' > payload.json
          else
            echo "üöÄ Release event trigger: ${{ github.event.release.tag_name }}"
            # –°–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –í–°–Å —Å–æ–±—ã—Ç–∏–µ release –≤ —Ñ–∞–π–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ
            printf '%s' '${{ toJson(github.event) }}' > payload.json
          fi

          echo "payload_path=payload.json" >> "$GITHUB_OUTPUT"
          echo "Payload bytes:"; wc -c payload.json

      - name: Send webhook to Jira
        run: |
          set -euo pipefail
          HTTP_CODE=$(curl -sS -o /tmp/resp.txt -w "%{http_code}" \
            -X POST \
            -H "Content-Type: application/json" \
            -H "X-Automation-Webhook-Token: ${JIRA_WEBHOOK_TOKEN}" \
            --data-binary @${{ steps.payload.outputs.payload_path }} \
            "${JIRA_WEBHOOK_URL}")

          echo "HTTP: $HTTP_CODE"
          cat /tmp/resp.txt || true

          # –§–µ–π–ª–∏–º, –µ—Å–ª–∏ –Ω–µ 2xx ‚Äî —É–¥–æ–±–Ω–µ–µ –æ—Ç–ª–∞–∂–∏–≤–∞—Ç—å
          test "${HTTP_CODE:0:1}" = "2"
          echo "‚úÖ Webhook sent successfully"
